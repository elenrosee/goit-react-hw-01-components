{"version":3,"sources":["components/Profile/Profile.module.scss","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","followers","views","likes","className","styles","profile","src","alt","Statistics","title","map","id","label","percentage","randomBackgroundColor","Math","random","toString","substring","toUpperCase","style","backgroundColor","FriendList","friends","isOnline","width","TransactionHistory","transactions","type","amount","currency","App","Fragment","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iXACAA,EAAOC,QAAU,CAAC,QAAU,2B,g8FC+CbC,EA5CC,SAAC,GAAD,IACdC,EADc,EACdA,OACAC,EAFc,EAEdA,KACAC,EAHc,EAGdA,IACAC,EAJc,EAIdA,SAJc,IAKdC,MAASC,EALK,EAKLA,UAAWC,EALN,EAKMA,MAAOC,EALb,EAKaA,MALb,OAOd,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,sBAAKF,UAAU,cAAf,UACE,qBAAKG,IAAKX,EAAQY,IAAI,gHAAsBJ,UAAU,WACtD,mBAAGA,UAAU,OAAb,SAAqBP,IACrB,oBAAGO,UAAU,MAAb,cAAqBN,KACrB,mBAAGM,UAAU,WAAb,SAAyBL,OAG3B,qBAAIK,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,wBACA,sBAAMA,UAAU,WAAhB,SAA4BH,OAE9B,+BACE,sBAAMG,UAAU,QAAhB,oBACA,sBAAMA,UAAU,WAAhB,SAA4BF,OAE9B,+BACE,sBAAME,UAAU,QAAhB,oBACA,sBAAMA,UAAU,WAAhB,SAA4BD,cCQrBM,EAnCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOV,EAAV,EAAUA,MAAV,OACjB,0BAASI,UAAU,aAAnB,UACGM,GAAS,oBAAIN,UAAU,QAAd,SAAuBM,IAEjC,oBAAIN,UAAU,YAAd,SACGJ,EAAMW,KAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACjBC,EACJ,IAAMC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,GAAGC,cAEnD,OACE,qBAEEhB,UAAU,OACViB,MAAO,CAAEC,gBAAiBP,GAH5B,UAKE,sBAAMX,UAAU,QAAhB,SAAyBS,IACzB,uBAAMT,UAAU,aAAhB,cAA+BU,OAL1BF,YCeFW,EA1BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAIpB,UAAU,cAAd,SACGoB,EAAQb,KAAI,gBAAGf,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAM4B,EAAjB,EAAiBA,SAAUb,EAA3B,EAA2BA,GAA3B,OACX,qBAAaR,UAAU,OAAvB,UACE,sBACEA,UAAU,SACViB,MAAO,CAAEC,gBAAiBG,EAAW,QAAU,SAEjD,qBAAKrB,UAAU,SAASG,IAAKX,EAAQY,IAAI,GAAGkB,MAAM,OAClD,mBAAGtB,UAAU,OAAb,SAAqBP,MANde,SC8BAe,EAjCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACzB,wBAAOxB,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGwB,EAAajB,KAAI,gBAAGC,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OAChB,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHEnB,Y,4BCcFoB,EAjBH,WACV,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,CACEpC,KAAMqC,EAAKrC,KACXC,IAAKoC,EAAKpC,IACVC,SAAUmC,EAAKnC,SACfH,OAAQsC,EAAKtC,OACbI,MAAOkC,EAAKlC,QAEd,cAAC,EAAD,CAAYU,MAAM,eAAeV,MAAOmC,IACxC,cAAC,EAAD,CAAYX,QAASA,IACrB,cAAC,EAAD,CAAoBI,aAAcA,Q,MCnBxCQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.441c6a95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__15I9R\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.scss';\n\nconst Profile = ({\n  avatar,\n  name,\n  tag,\n  location,\n  stats: { followers, views, likes },\n}) => (\n  <div className={styles.profile}>\n    <div className=\"description\">\n      <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\n      <p className=\"name\">{name}</p>\n      <p className=\"tag\">@{tag}</p>\n      <p className=\"location\">{location}</p>\n    </div>\n\n    <ul className=\"stats\">\n      <li>\n        <span className=\"label\">Followers </span>\n        <span className=\"quantity\">{followers}</span>\n      </li>\n      <li>\n        <span className=\"label\">Views </span>\n        <span className=\"quantity\">{views}</span>\n      </li>\n      <li>\n        <span className=\"label\">Likes </span>\n        <span className=\"quantity\">{likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ title, stats }) => (\n  <section className=\"statistics\">\n    {title && <h2 className=\"title\">{title}</h2>}\n\n    <ul className=\"stat-list\">\n      {stats.map(({ id, label, percentage }) => {\n        const randomBackgroundColor =\n          '#' + Math.random().toString(16).substring(2, 8).toUpperCase();\n\n        return (\n          <li\n            key={id}\n            className=\"item\"\n            style={{ backgroundColor: randomBackgroundColor }}\n          >\n            <span className=\"label\">{label}</span>\n            <span className=\"percentage\"> {percentage}</span>\n          </li>\n        );\n      })}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FriendList = ({ friends }) => (\n  <ul className=\"friend-list\">\n    {friends.map(({ avatar, name, isOnline, id }) => (\n      <li key={id} className=\"item\">\n        <span\n          className=\"avatar\"\n          style={{ backgroundColor: isOnline ? 'green' : 'red' }}\n        ></span>\n        <img className=\"avatar\" src={avatar} alt=\"\" width=\"48\" />\n        <p className=\"name\">{name}</p>\n      </li>\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className=\"transaction-history\">\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {transactions.map(({ id, type, amount, currency }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './data-info/user.json';\nimport statisticalData from './data-info/statistical-data.json';\nimport friends from './data-info/friends.json';\nimport transactions from './data-info/transactions.json';\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}